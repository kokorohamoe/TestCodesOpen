#
#

global_CountCompare = 0;
global_CountSwap    = 0;

def CompareLarge( a , i, j):
	global global_CountCompare
	global_CountCompare=global_CountCompare+1;
	return True if( a[i] > a[j] ) else False

def CompareSmall( a , i, j):
	global global_CountCompare
	global_CountCompare=global_CountCompare+1;
	return True if( a[i] < a[j] ) else False


def Swap( a , i , j):
	global global_CountSwap
	global_CountSwap=global_CountSwap+1;
	temp = a[i]
	a[i] = a[j]
	a[j] = temp
	return a

target_origin = [1 , 2 , 3, 4, 5, 6 , 6,5,4,3,2,1]
print("target_origin")
print(target_origin)
def sortLarge ( target , istart , iend ,jstart,jend ):
	for i in range(istart,iend):
		for j in range(jstart,jend):
			if(CompareLarge(target,i,j)):
				target = Swap(target,i,j)

def sortSmall ( target , istart , iend ,jstart,jend ):
	for i in range(istart,iend):
		for j in range(jstart,jend):
			if(CompareSmall(target,i,j)):
				target = Swap(target,i,j)
				
def sortSmallReverse ( target , istart , iend ,jstart,jend ):
	for i in range(iend-1,istart-1,-1):
		for j in range(jend-1,jstart-1,-1):
			if(CompareSmall(target,i,j)):
				target = Swap(target,i,j)

def sortLargeReverse ( target , istart , iend ,jstart,jend ):
	for i in range(iend-1,istart-1,-1):
		for j in range(jend-1,jstart-1,-1):
			if(CompareSmall(target,i,j)):
				target = Swap(target,i,j)


import threading

target1 = list ( target_origin );
thread1 = threading.Thread(target=sortLarge, args=([target1,0,len(target1),0,len(target1)]))
target2 = list ( target_origin );
thread2 = threading.Thread(target=sortSmall, args=([target2,0,len(target2),0,len(target2)]))
target3 = list ( target_origin );
thread3 = threading.Thread(target=sortSmallReverse, args=([target3,0,len(target3),0,len(target3)]))
target4 = list ( target_origin );
thread4 = threading.Thread(target=sortLargeReverse, args=([target4,0,len(target4),0,len(target4)]))

thread1.start()
thread2.start()
thread3.start()
thread4.start()
thread1.join()
thread2.join()
thread3.join()
thread4.join()


print("Answer")
print(target1,global_CountCompare,global_CountSwap)
print(target2)
print(target3)
print(target4)


