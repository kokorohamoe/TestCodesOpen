#
#

import pandas 
targets_data = pandas.read_csv("y_classified.csv")

C_BGR   = 0
C_YUV   = 1
C_Y     = 2

C_MAX   = C_Y+1

import cv2
import numpy
images = [ [],[],[] ]
for i in range(100):
    file = ('images/image%03d.png' % i )
    img = cv2.imread(file)
    images[C_BGR].append(img)
    img_yuv = cv2.cvtColor(img, cv2.COLOR_BGR2YUV)
    img_yuv_split = cv2.split(img_yuv)
    images[C_YUV].append(img_yuv)
    images[C_Y].append(img_yuv_split[0])

images_data =  [ [],[],[] ]
for c in range(C_MAX):
	images_data[c] = numpy.empty((100,len(images[c][0].ravel())),int)
	for i in range(100):
		images_data[c][i] = numpy.array ([images[c][i].ravel()])


import sklearn
import sklearn.model_selection


pakapaka = [[] for j in range(C_MAX)]
for c in range(C_MAX):
	pakapaka[c] = sklearn.model_selection.train_test_split(images_data[c], targets_data['Kirishima'], random_state=0)
	pakapaka[c].append( [] )

for c in range(C_MAX):
	print( len(pakapaka[c]) )

X_TRAIN = 0
X_TEST  = 1
Y_TRAIN = 2
Y_TEST  = 3

for c in range(C_MAX):
	print(pakapaka[c][X_TRAIN].shape)
	print(pakapaka[c][X_TEST].shape)
	print(pakapaka[c][Y_TRAIN].shape)
	print(pakapaka[c][Y_TEST].shape)

pakapaka = [[] in range(C_MAX)]
knn = KNeighborsClassifier(n_neighbors=1)
knn.fit(X_train, y_train)

y_pred = knn.predict(pakapaka[c][X_TEST])
print(np.mean(y_pred == pakapaka[c][Y_TEST]))