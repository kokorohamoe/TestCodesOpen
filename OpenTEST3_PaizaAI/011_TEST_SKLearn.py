#
#

import pandas 
targets_data = pandas.read_csv("y_classified.csv")

C_BGR   = 0
C_YUV   = 1
C_Y     = 2
C_HSV   = 3

C_MAX   = C_HSV+1

import cv2
import numpy
images = [[] for j in range(C_MAX)]
for i in range(100):
    file = ('images/image%03d.png' % i )
    img = cv2.imread(file)
    images[C_BGR].append(img)
    img_yuv = cv2.cvtColor(img, cv2.COLOR_BGR2YUV)
    img_yuv_split = cv2.split(img_yuv)
    images[C_YUV] = img_yuv
    images[C_Y]   = img_yuv_split[0]
    img_hsv = cv2.cvtColor(img, cv2.COLOR_BGR2HSV)    
    img_hsv_split = cv2.split(img_hsv)
    images[C_HSV] = img_hsv
    

images_data =  [[] for j in range(C_MAX)]
for c in range(C_MAX):
	print("Initialize:%d BEGIN" % c)
	images_data[c] = numpy.empty((100,len(images[c][0].ravel())),int)
	for i in range(100):
		images_data[c][i] = numpy.array ([images[c][i].ravel()])
	print("Initialize:%d END" % c)


import sklearn
import sklearn.model_selection


pakapaka = [[] for j in range(C_MAX)]

X_TRAIN = 0
X_TEST  = 1
Y_TRAIN = 2
Y_TEST  = 3
Y_PREDICT = 4

DEM_X = 0
DEM_Y = 1
TYPE_TRAIN  =0
TYPE_TEST   =1
TYPE_PREDICT=2



#for c in range(C_MAX):
#	pakapaka[c] = sklearn.model_selection.train_test_split(images_data[c], targets_data['Kirishima'], random_state=0)
#	pakapaka[c].append( [] )

for c in range(C_MAX):
	print("sklearn split :%d BEGIN" % c)
	bikini =  sklearn.model_selection.train_test_split(images_data[c], targets_data['Kirishima'], random_state=0) ;
	pakapaka[c] = [ [ [],[] ],[ [],[],[] ] ]
	pakapaka[c][DEM_X][TYPE_TRAIN] = bikini[X_TRAIN]
	pakapaka[c][DEM_X][TYPE_TEST ] = bikini[X_TEST]
	pakapaka[c][DEM_Y][TYPE_TRAIN] = bikini[Y_TRAIN]
	pakapaka[c][DEM_Y][TYPE_TEST ] = bikini[Y_TEST]
	print("sklearn split :%d END" % c)


#for c in range(C_MAX):
#	print( len(pakapaka[c]) )


for c in range(C_MAX):
	print("Type=%d" % c);
	print("\tDEM_X:%d" % len( pakapaka[c][DEM_X] ))
	print("\tDEM_Y:%d" % len( pakapaka[c][DEM_Y] ))
	print("\tX_TRAIN.shape:"+str ( pakapaka[c][DEM_X][TYPE_TRAIN].shape ))
	print("\tX_TEST.shape:"+str ( pakapaka[c][DEM_X][TYPE_TEST].shape ))
	print("\tY_TRAIN.shape:"+str ( pakapaka[c][DEM_Y][TYPE_TRAIN].shape ))
	print("\tY_TEST.shape:"+str ( pakapaka[c][DEM_Y][TYPE_TEST].shape ))
	
import sklearn.neighbors

knn = [[] for j in range(C_MAX)]
for c in range(C_MAX):
	knn[c] = sklearn.neighbors.KNeighborsClassifier(n_neighbors=1)
	knn[c].fit(pakapaka[c][DEM_X][TYPE_TRAIN], pakapaka[c][DEM_Y][TYPE_TRAIN])

for c in range(C_MAX):
	print("c=%d" % c)
	pakapaka[c][DEM_Y][TYPE_PREDICT] = knn[c].predict(pakapaka[c][DEM_X][TYPE_TEST])
	print(numpy.mean(pakapaka[c][DEM_Y][TYPE_PREDICT] == pakapaka[c][DEM_X][TYPE_TEST]))


s