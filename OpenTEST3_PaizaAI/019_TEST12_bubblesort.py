#
#

global_CountCompare = 0;
global_CountSwap    = 0;

def Compare( a , i, j):
	global global_CountCompare
	global_CountCompare=global_CountCompare+1;
	return True if( a[i] > a[j] ) else False

def Swap( a , i , j):
	global global_CountSwap
	global_CountSwap=global_CountSwap+1;
	temp = a[i]
	a[i] = a[j]
	a[j] = temp
	return a

target_origin = [1 , 2 , 3, 4, 5]
print(target_origin)
def sort ( target , istart , iend ,jstart,jend ):
	for i in range(istart,iend):
		for j in range(jstart,jend):
			if(Compare(target,i,j)):
				target = Swap(target,i,j)

import threading

target1 = list ( target_origin );
thread1 = threading.Thread(target=sort, args=([target1,0,len(target1),0,len(target1)]))

thread1.start()
#thread2.start()
thread1.join()
#thread2.join()



print(target1,global_CountCompare,global_CountSwap)


